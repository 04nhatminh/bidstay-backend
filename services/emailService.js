const nodemailer = require('nodemailer');

class EmailService {
    constructor() {
        this.transporter = nodemailer.createTransport({
            host: process.env.SMTP_HOST,
            port: process.env.SMTP_PORT,
            secure: false, // true for 465, false for other ports
            auth: {
                user: process.env.SMTP_USER,
                pass: process.env.SMTP_PASS,
            },
        });
    }

    // G·ª≠i email x√°c th·ª±c
    async sendVerificationEmail(to, fullName, verificationToken) {
        try {
            // Use environment variable or fallback to localhost:3000
            const baseUrl = process.env.BASE_URL || 'http://localhost:3000';
            const verificationUrl = `${baseUrl}/user/verify?token=${verificationToken}`;
            
            const mailOptions = {
                from: `"${process.env.FROM_NAME || 'BidStay Platform'}" <${process.env.FROM_EMAIL}>`,
                to: to,
                subject: 'üîê X√°c th·ª±c t√†i kho·∫£n BidStay',
                html: `
                    <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                        <div style="background: linear-gradient(135deg, #008489, #00b4d8); padding: 30px; text-align: center; color: white;">
                            <h1 style="margin: 0;">üè† BidStay</h1>
                            <p style="margin: 10px 0 0 0;">Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi n·ªÅn t·∫£ng ƒë·∫•u gi√° thu√™ nh√†!</p>
                        </div>
                        
                        <div style="padding: 30px; background: #f8f9fa;">
                            <h2 style="color: #333;">Xin ch√†o ${fullName}!</h2>
                            <p style="color: #666; line-height: 1.6;">
                                C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n A2BnB. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, 
                                vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n:
                            </p>
                            
                            <div style="text-align: center; margin: 30px 0;">
                                <a href="${verificationUrl}" 
                                   style="background: #008489; color: white; padding: 12px 30px; 
                                          text-decoration: none; border-radius: 25px; display: inline-block;
                                          font-weight: bold; transition: background 0.3s;">
                                    ‚úÖ X√°c th·ª±c t√†i kho·∫£n
                                </a>
                            </div>
                            
                            <p style="color: #666; font-size: 14px;">
                                N·∫øu n√∫t kh√¥ng ho·∫°t ƒë·ªông, vui l√≤ng copy v√† paste link sau v√†o tr√¨nh duy·ªát:<br>
                                <a href="${verificationUrl}" style="color: #008489;">${verificationUrl}</a>
                            </p>
                            
                            <p style="color: #666; font-size: 14px; margin-top: 20px;">
                                <strong>L∆∞u √Ω:</strong> Link x√°c th·ª±c s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.
                            </p>
                        </div>
                        
                        <div style="background: #333; color: white; padding: 20px; text-align: center; font-size: 12px;">
                            <p>¬© 2025 A2BnB Platform. All rights reserved.</p>
                            <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu x√°c th·ª±c n√†y, vui l√≤ng b·ªè qua email.</p>
                        </div>
                    </div>
                `
            };

            const result = await this.transporter.sendMail(mailOptions);
            console.log('‚úÖ Email sent successfully:', result.messageId);
            return { success: true, messageId: result.messageId };
        } catch (error) {
            console.error('‚ùå Error sending email:', error);
            throw error;
        }
    }

    // G·ª≠i email reset password
    async sendPasswordResetEmail(to, fullName, resetToken) {
        try {
            const baseUrl = process.env.CLIENT_ORIGIN|| 'http://localhost:3001';
            const resetUrl = `${baseUrl}/reset-password?token=${resetToken}`;
            
            const mailOptions = {
                from: `"${process.env.FROM_NAME}" <${process.env.FROM_EMAIL}>`,
                to: to,
                subject: 'üîë ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u BidStay',
                html: `
                    <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                        <div style="background: linear-gradient(135deg, #ff6b6b, #ee5a24); padding: 30px; text-align: center; color: white;">
                            <h1 style="margin: 0;">üè† BidStay</h1>
                            <p style="margin: 10px 0 0 0;">Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</p>
                        </div>
                        
                        <div style="padding: 30px; background: #f8f9fa;">
                            <h2 style="color: #333;">Xin ch√†o ${fullName}!</h2>
                            <p style="color: #666; line-height: 1.6;">
                                Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. 
                                Vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:
                            </p>
                            
                            <div style="text-align: center; margin: 30px 0;">
                                <a href="${resetUrl}" 
                                   style="background: #ff6b6b; color: white; padding: 12px 30px; 
                                          text-decoration: none; border-radius: 25px; display: inline-block;
                                          font-weight: bold;">
                                    üîë ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                                </a>
                            </div>
                            
                            <p style="color: #666; font-size: 14px;">
                                N·∫øu n√∫t kh√¥ng ho·∫°t ƒë·ªông, vui l√≤ng copy v√† paste link sau v√†o tr√¨nh duy·ªát:<br>
                                <a href="${resetUrl}" style="color: #ff6b6b;">${resetUrl}</a>
                            </p>
                            
                            <p style="color: #666; font-size: 14px; margin-top: 20px;">
                                <strong>L∆∞u √Ω:</strong> Link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.
                            </p>
                            
                            <p style="color: #999; font-size: 12px; margin-top: 20px;">
                                N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
                            </p>
                        </div>
                    </div>
                `
            };

            const result = await this.transporter.sendMail(mailOptions);
            console.log('‚úÖ Password reset email sent:', result.messageId);
            return { success: true, messageId: result.messageId };
        } catch (error) {
            console.error('‚ùå Error sending reset email:', error);
            throw error;
        }
    }

    // Test k·∫øt n·ªëi SMTP
    async testConnection() {
        try {
            await this.transporter.verify();
            console.log('‚úÖ SMTP connection successful');
            return true;
        } catch (error) {
            console.error('‚ùå SMTP connection failed:', error);
            return false;
        }
    }
}

module.exports = new EmailService();